name: Security CI Pipeline

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build application (skip tests)
        run: mvn clean compile -DskipTests

      - name: SAST - Run SpotBugs analysis
        run: |
          mvn spotbugs:spotbugs
          mvn spotbugs:check
        continue-on-error: true

      - name: SAST - Upload SpotBugs report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: spotbugs-report
          path: target/spotbugs/

      - name: SCA - Run Snyk security scan
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk-results.sarif
        continue-on-error: true

      - name: SCA - Upload Snyk report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: snyk-report
          path: snyk-results.sarif

      - name: Security scan summary
        run: |
          echo "=== Security Scanning Complete ==="
          echo "✅ Code compiled successfully"
          echo "✅ SpotBugs analysis completed"
          echo "✅ Snyk dependency scan completed"
          echo "==================================="

  docker-build:
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build application for Docker
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t secure-api:latest .

      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          docker images | grep secure-api

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.ref == 'refs/heads/main'

      - name: Push Docker image
        run: |
          docker tag secure-api:latest ${{ secrets.DOCKER_USERNAME }}/secure-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/secure-api:latest
        if: github.ref == 'refs/heads/main'